let dragging,draggedOver;function initDraggableItems(){const t=document.querySelectorAll(".playlist .playlist__song");for(song of t)setDraggable(song),setDroppable(song)}function setDraggable(t){t.draggable=!0,t.addEventListener("dragstart",dragStart),t.addEventListener("dragend",dragEnd)}function setDroppable(t){t.addEventListener("dragover",dragOver),t.addEventListener("drop",dropItem)}function dragStart(t){console.dir(t.target),dragging=t.target,dragging.classList.add("dragging")}function dragEnd(t){dragging&&(dragging.classList.remove("dragging"),draggedOver.classList.remove("draggedOver"),dragging=void 0,draggedOver=void 0)}function dragOver(t){if(t.preventDefault(),!dragging)return;if(!t.target.parentElement.classList.contains("playlist"))return;draggedOver?.classList.remove("draggedOver","top","bottom"),draggedOver=t.target,draggedOver.classList.add("draggedOver");let e=t.target.getBoundingClientRect(),a=t.clientY-e.top>e.height/2?"bottom":"top";draggedOver.classList.add(a)}function dropItem(t){dragging&&(draggedOver.classList.contains("bottom")?draggedOver.parentNode.insertBefore(dragging,draggedOver.nextSibling):draggedOver.classList.contains("top")&&draggedOver.parentNode.insertBefore(dragging,draggedOver))}function debounce(t,e=1e3){let a;return(...n)=>{clearTimeout(a),a=setTimeout((()=>{a=null,t.apply(null,n)}),e)}}function createAutoComplete({root:t,fetchData:e,renderOption:a,onOptionSelect:n,setInputValue:s}){t.innerHTML='\n        <label>\n            <span class="autocomplete__label">Search:</span>\n            <input type="text" class="autocomplete__input" placeholder="Search...">\n        </label>\n        <div class="autocomplete__dropdown">\n            <div class="autocomplete__dropdown--menu">\n                <div class="autocomplete__dropdown--content autocomplete__results"></div>\n            </div>\n        </div>\n\n    ';const o=t.querySelector(".autocomplete__input"),l=t.querySelector(".autocomplete__dropdown"),r=t.querySelector(".autocomplete__results"),i=async t=>{const i=await e(t.target.value);if(r.innerHTML="",i.length){l.classList.add("is-active");for(let t of i){let e=document.createElement("a");e.classList.add("autocomplete__dropdown-item"),e.innerHTML=a(t),e.addEventListener("click",(e=>{l.classList.remove("is-active"),o.value=s(t),n(t,e)})),r.appendChild(e)}}else l.classList.remove("is-active")};o.addEventListener("input",debounce(i,500)),o.addEventListener("submit",i),document.addEventListener("click",(e=>{t.contains(e.target)||l.classList.remove("is-active")})),o.addEventListener("focusin",(()=>{""!==r.innerHTML&&l.classList.add("is-active")}))}function createPlaylist({root:t,songsummary:e,renderItem:a}){function n(t){t.classList.contains("playing")?s(t):(function(){const t=document.querySelectorAll(".playlist__song.playing");for(let e of t)s(e)}(),function(t){(function(t,e=null,a,n){null!==e&&(t.volume=e);const s=(a-t.volume)/(20*n),o=setInterval((()=>{t.volume=(t.volume+s).toFixed(8),t.volume<=0?(t.volume=0,clearInterval(o)):t.volume>=1&&(t.volume=1,clearInterval(o))}),50);setTimeout((()=>{clearInterval(o)}),1e3*n)})(t.querySelector("audio"),0,1,2),t.querySelector("audio").play(),t.querySelector(".playlist__song--play-pause-button").innerHTML='<i class="fas fa-pause"></i>',t.classList.add("playing")}(t))}function s(t){t.querySelector("audio").pause(),t.querySelector(".playlist__song--play-pause-button").innerHTML='<i class="fas fa-play"></i>',t.classList.remove("playing")}t.innerHTML='\n\t\t<div class="playlist">\n\t\t\t<div class="playlist__intro">\n\t\t\t\tSearch for some songs to add to your playlist!\n\t\t\t</div>\n\t\t</div>\n    ',e.addEventListener("click",(function(e){if(e.target.closest(".songSummary__addToPlaylist--button")){song=function(t){const e=t.querySelector(".songSummary__title").dataset.title,a=t.querySelector(".songSummary__artist").dataset.artist,n=t.querySelector(".songSummary__album").dataset.album,s=t.querySelector(".songSummary__audio").src;return{title:e,artist:a,album:n,preview:s}}(this),function(t,e){const s=document.createElement("div");s.classList.add("playlist__song"),s.innerHTML=function(t){return a(t)}(e),s.addEventListener("click",(function(t){t.target.closest(".playlist__song--play-pause-button")&&n(this)})),s.addEventListener("mousedown",(function(t){t.target.closest(".playlist__song--play-pause-button")&&t.preventDefault()})),setDraggable(s),setDroppable(s),t.appendChild(s),s.querySelector("audio").addEventListener("ended",(function(){const t=s.nextSibling;n(s),t&&t.classList.contains("playlist__song")&&n(t)}))}(t.querySelector(".playlist"),song)}})),e.addEventListener("mousedown",(function(t){t.target.closest(".songSummary__addToPlaylist--button")&&t.preventDefault()}))}const baseURL="https://itunes.apple.com/",fetchSearchResults=async t=>{t.replace(/\s/g,"+");return(await axios.get(baseURL+"search",{params:{term:t,country:"us",limit:"10"}})).data.results},fetchSongData=async t=>(await axios.get(baseURL+"lookup",{params:{term:t}})).data,searchWidgets=document.querySelectorAll(".autocomplete");for(widget of searchWidgets)widget.parentElement.querySelector(".songSummary").classList.add("hidden"),createAutoComplete({root:widget,fetchData:fetchSearchResults,renderOption:t=>`\n                <div class="autocomplete__dropdown-item--image">\n                    <img src=${t.artworkUrl100}>\n                </div>\n                <div class="autocomplete__dropdown-item--content">\n                    <span class="title">${t.trackName}</span>\n                    <span class="subtitle">\n                        <a href="${t.artistViewUrl}" class="artist">${t.artistName}</a> - \n                        <a href="${t.collectionViewUrl}" class="album">${t.collectionName}</a>\n                    </span>\n                    </div>\n            `,onOptionSelect:(t,e)=>{if(e.target.classList.contains("artist")||e.target.classList.contains("album")){e.preventDefault();const t=widget.querySelector("input");t.value=e.target.innerText;let a=new Event("submit");t.dispatchEvent(a)}else onSongSelect(t,widget)},setInputValue:t=>t.trackName});const onSongSelect=(t,e)=>{const a=e.parentElement.querySelector(".songSummary");a.classList.remove("hidden"),a.innerHTML=songTemplate(t)},songTemplate=t=>{const e=t.artworkUrl100,a=t.trackName,n=t.artistName,s=t.artistViewUrl,o=t.collectionName;return`\n\t\t<img class="songSummary__image" src="${e}">\n\t\t<div class="songSummary__contentBlock">\n\t\t\t<h3 class="songSummary__title" data-title="${a}">${a}</h3>\n\t\t\t<a class="songSummary__artist" href="${s}"  data-artist="${n}">${n}</a> : \n\t\t\t<a class="songSummary__album" href="${t.collectionViewUrl}"  data-album="${o}">${o}</a>\n\t\t\t<div class="songSummary__preview">\n\t\t\t\t<audio class="songSummary__audio" src="${t.previewUrl}" controls>\n\t\t\t\t\tYour browser does not support the audio element.\n\t\t\t\t</audio>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="songSummary__addToPlaylist--container">\n\t\t\t<button class="songSummary__addToPlaylist--button"><i class="fas fa-plus"></i>\n\t\t\t</button>\n\t\t</div>\n    `},songSummary=document.querySelector(".songSummary"),playlist=document.querySelector(".playlist-container");createPlaylist({root:playlist,songsummary:songSummary,renderItem:({title:t,artist:e,album:a,preview:n})=>`\n\t\t\t<audio class="playlist__song--audio" src=${n}></audio>\n\t\t\t<div class="playlist__song--play-pause-container">\n\t\t\t\t<button class="playlist__song--play-pause-button"><i class="fas fa-play"></i></button>\n\t\t\t</div>\n\t\t\t<div class="playlist__song--col playlist__song--col-1">\n\t\t\t\t<span class="playlist__song--title ${t.length>35?"long":""}">${t}</span>\n\t\t\t</div>\n\t\t\t<div class="playlist__song--col playlist__song--col-2">\n\t\t\t\t<span class="playlist__song--info ${e.length+a.length>50?"long":""}"><strong>${e}</strong>: ${a}</span>\n\t\t\t</div>\n\t\t`});