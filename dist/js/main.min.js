function debounce(t,e=1e3){let a;return(...s)=>{clearTimeout(a),a=setTimeout((()=>{a=null,t.apply(null,s)}),e)}}function createAutoComplete({root:t,fetchData:e,renderOption:a,onOptionSelect:s,setInputValue:n}){t.innerHTML='\n        <label>\n            <span class="autocomplete__label">Search:</span>\n            <input type="text" class="autocomplete__input">\n        </label>\n        <div class="autocomplete__dropdown">\n            <div class="autocomplete__dropdown--menu">\n                <div class="autocomplete__dropdown--content autocomplete__results"></div>\n            </div>\n        </div>\n\n    ';const l=t.querySelector(".autocomplete__input"),o=t.querySelector(".autocomplete__dropdown"),i=t.querySelector(".autocomplete__results"),r=async t=>{const r=await e(t.target.value);if(console.dir(r),i.innerHTML="",r.length){o.classList.add("is-active");for(let t of r){let e=document.createElement("a");e.classList.add("autocomplete__dropdown-item"),e.innerHTML=a(t),e.addEventListener("click",(e=>{o.classList.remove("is-active"),l.value=n(t),s(t,e)})),i.appendChild(e)}}else o.classList.remove("is-active")};l.addEventListener("input",debounce(r,500)),l.addEventListener("submit",r),document.addEventListener("click",(e=>{t.contains(e.target)||o.classList.remove("is-active")})),l.addEventListener("focusin",(()=>{""!==i.innerHTML&&o.classList.add("is-active")}))}function createPlaylist({root:t,songsummary:e,renderItem:a}){t.innerHTML='\n        <div class="playlist"></div>\n    ',e.addEventListener("click",(function(e){if(e.target.closest(".songSummary__addToPlaylist--button")){song=getSongFromSummary(this),addItemToPlaylist(t.querySelector(".playlist"),song)}}))}function getSongFromSummary(t){return{title:t.querySelector(".songSummary__title").dataset.title,artist:t.querySelector(".songSummary__artist").dataset.artist,album:t.querySelector(".songSummary__album").dataset.album,preview:t.querySelector(".songSummary__audio").src}}function addItemToPlaylist(t,{title:e,artist:a,album:s,preview:n}){const l=document.createElement("div");l.classList.add("playlist__song"),l.innerHTML=playlist_song_template(song),l.addEventListener("click",(function(t){if(t.target.closest(".playlist__song--play-pause-button")){let t=this.querySelector(".playlist__song--audio"),e=this.querySelector(".playlist__song--play-pause-button");const a=e.classList.contains("playing");a?t.pause():t.play();const s=a?"play":"pause";e.innerHTML=`<i class="fas fa-${s}"></i>`,e.classList.toggle("playing")}})),t.appendChild(l)}function playlist_song_template({title:t,artist:e,album:a,preview:s}){return`\n        <audio class="playlist__song--audio" src=${s}></audio>\n        <div class="playlist__song--play-pause-container">\n            <button class="playlist__song--play-pause-button"><i class="fas fa-play"></i></button>\n        </div>\n        <span class="playlist__song--title">${t}</span>\n        <span class="playlist__song--info"><strong>${e}</strong>: ${a}</span>\n    `}const baseURL="https://itunes.apple.com/",fetchSearchResults=async t=>{t.replace(/\s/g,"+");return(await axios.get(baseURL+"search",{params:{term:t,country:"us",limit:"10"}})).data.results},fetchSongData=async t=>(await axios.get(baseURL+"lookup",{params:{term:t}})).data,searchWidgets=document.querySelectorAll(".autocomplete");for(widget of searchWidgets)widget.parentElement.querySelector(".songSummary").classList.add("hidden"),createAutoComplete({root:widget,fetchData:fetchSearchResults,renderOption:t=>`\n                <div class="autocomplete__dropdown-item--image">\n                    <img src=${t.artworkUrl100}>\n                </div>\n                <div class="autocomplete__dropdown-item--content">\n                    <span class="title">${t.trackName}</span>\n                    <span class="subtitle">\n                        <a href="${t.artistViewUrl}" class="artist">${t.artistName}</a> - \n                        <a href="${t.collectionViewUrl}" class="album">${t.collectionName}</a>\n                    </span>\n                    </div>\n            `,onOptionSelect:(t,e)=>{if(e.target.classList.contains("artist")||e.target.classList.contains("album")){e.preventDefault();const t=widget.querySelector("input");t.value=e.target.innerText;let a=new Event("submit");t.dispatchEvent(a)}else onSongSelect(t,widget)},setInputValue:t=>t.trackName});const onSongSelect=(t,e)=>{const a=e.parentElement.querySelector(".songSummary");a.classList.remove("hidden"),a.innerHTML=songTemplate(t)},songTemplate=t=>{const e=t.artworkUrl100,a=t.trackName,s=t.artistName,n=t.artistViewUrl,l=t.collectionName;return`\n\t\t<img class="songSummary__image" src="${e}">\n\t\t<div class="songSummary__contentBlock">\n\t\t\t<h3 class="songSummary__title" data-title="${a}">${a}</h3>\n\t\t\t<a class="songSummary__artist" href="${n}"  data-artist="${s}">${s}</a> : \n\t\t\t<a class="songSummary__album" href="${t.collectionViewUrl}"  data-album="${l}">${l}</a>\n\t\t\t<div class="songSummary__preview">\n\t\t\t\t<audio class="songSummary__audio" src="${t.previewUrl}" controls>\n\t\t\t\t\tYour browser does not support the audio element.\n\t\t\t\t</audio>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="songSummary__addToPlaylist--container">\n\t\t\t<button class="songSummary__addToPlaylist--button"><i class="fas fa-plus"></i>\n\t\t\t</button>\n\t\t</div>\n    `},songSummary=document.querySelector(".songSummary"),playlist=document.querySelector(".playlist-container");createPlaylist({root:playlist,songsummary:songSummary,renderItem:t=>{}});